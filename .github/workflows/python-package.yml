name: Python Backend Sandbox

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: nikhiltiru/py_backend_sandbox
  EB_APPLICATION_NAME       : "py_backend_sandbox"
  EB_ENVIRONMENT_NAME       : "PyBackendSandbox-env"
  AWS_REGION_NAME           : "us-east-2"

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install flake8 pytest
        if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  push_to_docker:
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: nikhiltiru/py_backend_sandbox:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy_to_aws_eb:
     runs-on: ubuntu-latest
     needs: [push_to_docker]
       
     steps:
      - name: Configure my AWS Credentils
        uses: aws-actions/configure-aws-credentials@v1
        with:
           aws-access-key-id    : ${{ secrets.AWS_KEY }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
           aws-region           : ${{ env.AWS_REGION_NAME }}
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Test aws eb cli
        run: |
            python3 -V
            python3 -m pip install --upgrade awsebcli
            eb init -p docker test1-env
            eb deploy
          
